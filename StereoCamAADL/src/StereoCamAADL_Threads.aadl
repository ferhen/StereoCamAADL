package StereoCamAADL_Threads
public
	
	with StereoCamAADL_Data;
	
	

-----------------------
-------THREADS---------
-----------------------
thread data_saver
	features
		l_camera_img_in: in data port StereoCamAADL_Data::camera_image.impl;
		r_camera_img_in: in data port StereoCamAADL_Data::camera_image.impl;
		gps_data_in: in data port StereoCamAADL_Data::gps_data.impl;
		laser_data_in: in data port StereoCamAADL_Data::laser_data.impl;
		flash_mem_data_out: out data port StereoCamAADL_Data::flash_mem_data.impl;
	properties
		Scheduling_Protocols => Rate_Monotonic_Protocol;
		Dispatch_protocol => periodic;
		period => 1000 ms;
		compute_execution_time => 20 ms .. 100 ms; --Depende da velocidade dos dados (?)
		deadline => 1000 ms;
		priority => 3;
		POSIX_Scheduling_Policy => SCHED_RR;	--priority based
end data_saver;

thread implementation data_saver.impl
end data_saver.impl;



thread stereo_img_collector
	features
		cameras_trigger: in event port;
		l_camera_img_out: out data port StereoCamAADL_Data::camera_image.impl;
		r_camera_img_out: out data port StereoCamAADL_Data::camera_image.impl;
	properties
		Scheduling_Protocols => Rate_Monotonic_Protocol;
		Dispatch_protocol => periodic;
		period => 100 ms;
		compute_execution_time => 2 ms .. 10 ms;
		deadline => 100 ms;
		priority => 6;
		POSIX_Scheduling_Policy => SCHED_RR;	--priority based
end stereo_img_collector;

thread implementation stereo_img_collector.impl
end stereo_img_collector.impl;



thread laser_data_collector
	features
		laser_trigger: in event port;
		laser_data_out: out data port StereoCamAADL_Data::laser_data.impl;
	properties
		Scheduling_Protocols => Rate_Monotonic_Protocol;
		Dispatch_protocol => periodic;
		period => 400 ms;
		compute_execution_time => 10 ms .. 20 ms;
		deadline => 400 ms;
		priority => 4;
		POSIX_Scheduling_Policy => SCHED_FIFO;	
end laser_data_collector;

thread implementation laser_data_collector.impl
end laser_data_collector.impl;
	


thread gps_data_collector
	features
		gps_trigger: in event port;
		gps_data_out: out data port StereoCamAADL_Data::gps_data.impl;
	properties
		Scheduling_Protocols => Rate_Monotonic_Protocol;
		Dispatch_protocol => periodic;
		period => 200 ms;
		compute_execution_time => 10 ms .. 20 ms;
		deadline => 200 ms;
		priority => 5;
		POSIX_Scheduling_Policy => SCHED_FIFO;	
end gps_data_collector;

thread implementation gps_data_collector.impl
end gps_data_collector.impl;



thread wifi_control_data_collector
	features
		control_data: out data port StereoCamAADL_Data::control_data.impl;
	properties
		Scheduling_Protocols => Rate_Monotonic_Protocol;
		Dispatch_protocol => periodic;
		period => 400 ms;
		compute_execution_time => 10 ms .. 20 ms;
		deadline => 400 ms;
		priority => 2;
		POSIX_Scheduling_Policy => SCHED_FIFO;	
end wifi_control_data_collector;

thread implementation wifi_control_data_collector.impl
end wifi_control_data_collector.impl;



thread wifi_video_data_sender
	features
		l_camera_img_in: in data port StereoCamAADL_Data::camera_image.impl;
		r_camera_img_in: in data port StereoCamAADL_Data::camera_image.impl;
	properties
		Scheduling_Protocols => Rate_Monotonic_Protocol;
		Dispatch_protocol => periodic;
		period => 100 ms;
		compute_execution_time => 10 ms .. 20 ms;
		deadline => 100 ms;
		priority => 2;
		POSIX_Scheduling_Policy => SCHED_FIFO;	
end wifi_video_data_sender;

thread implementation wifi_video_data_sender.impl
end wifi_video_data_sender.impl;

	
end StereoCamAADL_Threads;


